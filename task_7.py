print('Задача 7. Яйца')

# В рамках программы колонизации Марса
# компания «Спейс Инжиниринг» вывела особую породу черепах,
# которые, по задумке, должны размножаться, откладывая яйца в марсианском грунте.
# Откладывать яйца слишком близко к поверхности опасно из-за радиации,
# а слишком глубоко — из-за давления грунта и недостатка кислорода.
# Вообще, факторов очень много,
# но специалисты проделали большую работу и предположили,
# что уровень опасности для черепашьих яиц рассчитывается по формуле
# D = x**3 − 3x**2 − 12x + 10,
# где x — глубина кладки в метрах,
# а D — уровень опасности в условных единицах.
# 
# Для тестирования гипотезы
# нужно взять пробу грунта на безопасной, согласно формуле, глубине.
# 
# Напишите программу,
# находящую такое значение глубины "х", при котором уровень опасности как можно более близок к нулю.
# На вход программе подаётся максимально допустимое отклонение уровня опасности от нуля,
# а программа должна рассчитать приблизительное значение "х",
# удовлетворяющее этому отклонению.
# 
# Известно, что глубина точно больше нуля и меньше четырёх метров.
# 
# Обеспечьте контроль ввода.
# 
# Пример:
# Введите максимально допустимый уровень опасности: 0.01
# 
# Приблизительная глубина безопасной кладки: 0.732421875 м
import math
pdu = float(input('Введите максимально допустимый уровень опасности: '))
#x**3 − 3x**2 − 12x + 10 == pdu
a = -3
b = -12
c = 10  - pdu
Q = (a**2 - 3*b) / 9
#print(Q)
R = (2*a**3 - 9*a*b + 27*c) / 54
#print(R)
#print(R**2, Q**3)
t = math.acos(R/math.sqrt(Q**3))/3
x1 = -2 * math.sqrt(Q) * math.cos(t) - a/3
x2= -2 * math.sqrt(Q) * math.cos(t+(2*math.pi/3)) - a/3
x3= -2 * math.sqrt(Q) * math.cos(t-(2*math.pi/3)) - a/3
#print(x1, x2, x3)

if 0 < x1 < 4:
  print('Приблизительная глубина безопасной кладки:', x1, 'м')
if 0 < x2 < 4:
  print('Приблизительная глубина безопасной кладки:', x2, 'м')
if 0 < x3 < 4:
  print('Приблизительная глубина безопасной кладки:', x3, 'м')









